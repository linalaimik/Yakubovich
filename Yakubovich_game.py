import random
import codecs


word = None
def Yakubovich_game():
    global word
    lvl_game()
    print(f' –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –±—É–∫–≤ –≤ —Å–ª–æ–≤–µ = {len(word)} ')
    print(' üêç –£–¥–∞—á–∏ üêç ')
    letters = list(word)
    Yakubovich_time = ['_' for _ in letters]
    attempts = 0
    lives = 10 * '‚ù§'
    print('')
    print( '@'*19)
    print('üòà–ò–≥—Ä–∞ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—èüòà ')
    print( '@'*19)
    print()
    while '_' in Yakubovich_time:
        for bukovka in Yakubovich_time:
            print(bukovka, end ='')
        letter_in_word = input(' –ö–∞–∫—É—é –±—É–∫–≤—É –≤—ã–±–∏—Ä–∞–µ—Ç–µ? =) ')
        if letter_in_word in letters:
            print(f' –û—Ç–∫—Ä–æ–π—Ç–µ –±—É–∫–≤—É {letter_in_word}')
            print(lives)
            for i, letter in enumerate(letters):
                if letter == letter_in_word:
                    Yakubovich_time[i] = letter_in_word
        elif not letter_in_word:
            print(' –í—ã –≤–≤–µ–ª–∏ –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –±—É–∫–≤—É! ')
            print(lives)
            continue
        else:
            print(' –¢–∞–∫–æ–π –±—É–∫–≤—ã –Ω–µ—Ç –≤—ã –ø–æ—Ç–µ—Ä—è–ª–∏ –æ–¥–Ω—É –∂–∏–∑–Ω—å =( ')
            lives = lives[:-1]
            print(lives)
        attempts +=1
        if len(lives) == 0:
            print(' –ñ–∏–∑–Ω–µ–π –Ω–µ –æ—Å—Ç–∞–ª–æ—Å—å, –∏–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞ =( ')
            print(f' –ë—ã–ª–æ –∑–∞–≥–∞–¥–∞–Ω–æ —Å–ª–æ–≤–æ:  {word} ')
            print(' –í—ã —Ä–∞—Å—Å—Ç—Ä–æ–∏–ª–∏ –æ–¥–Ω–æ–≥–æ –Ø–∫—É–±–æ–≤–∏—á–∞ =( ')
            break
        if '_' not in Yakubovich_time:
            print(f' –í—ã —É–≥–∞–¥–∞–ª–∏ —Å–ª–æ–≤–æ:  {word} ')
            print(' –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º —Å –ø–æ–±–µ–¥–æ–π!!! ')
            print(' –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫ - ', attempts )
            print(' –Ø–∫—É–±–æ–≤–∏—á –í–∞–º–∏ –≥–æ—Ä–¥–∏—Ç—Å—è! ')
            

def after_game():  
    print('–•–æ—Ç–∏—Ç–µ –µ—â—ë –æ–¥–∏–Ω —Ä–∞—É–Ω–¥?')  
    while True:  
        choice = input('–î–∞(–¥)/–ù–µ—Ç(–Ω)')  
        if choice == '–¥':  
            Yakubovich_game()  
        elif choice == '–Ω':  
            print('–≠—Ö, –∂–∞–ª—å —Ç–µ—Ä—è—Ç—å —Ç–∞–∫–æ–≥–æ —Ö–æ—Ä–æ—à–µ–≥–æ –∏–≥—Ä–æ–∫–∞')  
            print('–° –Ω–µ—Ç–µ—Ä–ø–µ–Ω–∏–µ–º –∂–¥—ë–º –≤–∞—Å —Å–Ω–æ–≤–∞')  
            break  
        else:  
            print(' –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥ ')  
        
 
def lvl_game():
    global word
    while True:
        print('–í—ã–±–µ—Ä–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å —Å–æ–∂–Ω–æ—Å—Ç–∏:')
        print('* Light : –æ—Ç 4 –¥–æ 10 –±—É–∫–≤ –≤ —Å–ª–æ–≤–µ *')
        print('@ Hard : 10 –∏ –±–æ–ª–µ–µ –±—É–∫–≤ –≤ —Å–ª–æ–≤–µ @')
        level = input('Light(–ª) / Hard(—Ö) ')
        if level == '–ª':
            print(' –í—ã –≤—ã–±—Ä–∞–ª–∏ –ª—ë–≥–∫–∏–π —É—Ä–æ–≤–µ–Ω—å ')
            with codecs.open('words-light.txt', 'r', 'utf-8') as f:
                word = random.choice(f.readlines())
                word = word.replace('\n', '')
                word = word.replace('\r', '')
                break
        elif level == '—Ö':
            print(' –í—ã –≤—ã–±—Ä–∞–ª–∏ —Å–ª–æ–∂–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å ')
            with codecs.open('words-hard.txt.', 'r', 'utf-8') as f:
                word = random.choice(f.readlines())
                word = word.replace('\n', '')
                word = word.replace('\r', '')
                break
        else:
            print(' –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥ ')
        
    
print('#'*33)
print('###  –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∏–≥—Ä—É  ###')
print('#'*33)
print('@'*4, ' –ú—ã —Å –í–∞–º–∏ —Å—ã–≥—Ä–∞–µ–º –≤ ') 
print('@'*4, '–≤–∏—Å–µ–ª–∏—Ü—É/–ü–æ–ª–µ—á—É–¥–µ—Å/–Ø–∫—É–±–æ–≤–∏—á-—Ç–∞–π–º ')
print('@'*4, '–ù–∞–∑—ã–≤–∞–π—Ç–µ –∫–∞–∫ —Ö–æ—Ç–∏—Ç–µ ')
while True:
    print('@'*4, ' –ó–Ω–∞–µ—Ç–µ –ª–∏ –≤—ã –ø—Ä–∞–≤–∏–ª–∞? ')
    action = input(' –¥–∞(–¥)/–Ω–µ—Ç(–Ω)')
    if action == '–¥':
        print('–û—Ç–ª–∏—á–Ω–æ, –Ω–∞—á–∏–Ω–∞–µ–º ')
        Yakubovich_game()
        after_game()
        break
    elif action == '–Ω':
        print('–ü—Ä–∞–≤–∏–ª–∞: ')
        print(' 1) –í—ã –≤—ã–±–∏—Ä–∞–µ—Ç–µ —É—Ä–æ–≤–µ–Ω—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏')
        print(' 2) –ü–æ–ª—É—á–∞–µ—Ç–µ —Å–ª–æ–≤–æ ')
        print(' 3) –£–≥–∞–¥—ã–≤–∞–µ—Ç–µ —Å–ª–æ–≤–æ –ø–æ –±—É–∫–≤–∞–º ')
        print(' 4) –ï—Å–ª–∏ –æ—à–∏–±—ë—Ç–µ—Å—å 10 —Ä–∞–∑ - –ø—Ä–æ–∏–≥—Ä–∞–µ—Ç–µ')
        Yakubovich_game()
        after_game()
        break
    else:
        print(' –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥ ')
